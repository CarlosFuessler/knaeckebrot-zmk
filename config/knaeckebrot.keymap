#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    model = "Knaeckebrot";
    compatible = "knaeckebrot,rev1";

    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <14>;
        rows = <5>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6)    RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6)    RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6)    RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13)
                    RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6)            RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12)
                            RC(4,2) RC(4,3) RC(4,4)                                    RC(4,9) RC(4,10) RC(4,11)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";

        diode-direction = "col2row";
        row-gpios
            = <&pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;

        col-gpios
            = <&pro_micro 21 GPIO_ACTIVE_HIGH>
            , <&pro_micro 20 GPIO_ACTIVE_HIGH>
            , <&pro_micro 19 GPIO_ACTIVE_HIGH>
            , <&pro_micro 18 GPIO_ACTIVE_HIGH>
            , <&pro_micro 15 GPIO_ACTIVE_HIGH>
            ;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC   &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6   &kp N7 &kp N8 &kp N9 &kp N0    &kp MINUS &kp EQUAL &kp BSPC
                &kp TAB   &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y    &kp U  &kp I  &kp O  &kp P     &kp LBKT  &kp RBKT  &kp BSLH
                &kp CAPS  &kp A  &kp S  &kp D  &kp F  &kp G  &kp H    &kp J  &kp K  &kp L  &kp SEMI  &kp APOS  &kp RET   &trans
                          &kp LSHFT &kp Z &kp X &kp C &kp V &kp B      &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                                   &kp LCTRL &kp LGUI &kp LALT               &kp RALT &kp RGUI &kp RCTRL
            >;
        };

        function_layer {
            bindings = <
                &kp GRAVE &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6   &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &kp DEL
                &trans    &trans &trans &trans &trans &trans &trans   &trans &kp UP &trans &trans  &trans  &trans  &trans
                &trans    &trans &trans &trans &trans &trans &trans   &kp LEFT &kp DOWN &kp RIGHT &trans &trans &trans &trans
                          &trans &trans &trans &trans &trans &trans   &trans &trans &trans &trans &trans &trans
                                 &trans &trans &trans                        &trans &trans &trans
            >;
        };

        symbol_layer {
            bindings = <
                &kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &kp UNDER &kp PLUS &trans
                &trans    &trans   &trans &trans   &trans   &trans    &trans    &trans   &trans    &trans   &trans   &kp LBRC  &kp RBRC &kp PIPE
                &trans    &trans   &trans &trans   &trans   &trans    &trans    &trans   &trans    &trans   &kp COLON &kp DQT  &trans   &trans
                          &trans   &trans &trans   &trans   &trans    &trans    &trans   &trans    &trans   &trans   &kp QMARK &trans
                                   &trans &trans   &trans                       &trans   &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &trans &trans &trans &trans &trans &sys_reset
                &trans     &trans       &trans       &trans       &trans       &trans       &trans &trans &trans &trans &trans &trans &trans &bootloader
                &trans     &trans       &trans       &trans       &trans       &trans       &trans &trans &trans &trans &trans &trans &trans &trans
                           &trans       &trans       &trans       &trans       &trans       &trans &trans &trans &trans &trans &trans &trans
                                        &trans       &trans       &trans                           &trans &trans &trans
            >;
        };
    };
};